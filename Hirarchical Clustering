
import numpy as np
import pandas as pd
import matplotlib.pylab as plt 

airline = pd.read_csv("file:///C:/Users/new/Downloads/EastWestAirlines.csv")


airline =airline.drop(['ID'], axis = 1) 

# Normalization function 

def norm_func(i):
    x = (i-i.min())	/	(i.max()	-	i.min())
    return (x)

# Normalized data frame (considering the numerical part of data)
# excluding first clumn , allowing all rows and remaining cloumns

df_norm = norm_func(airline.iloc[:,1:])

# for linkage
from scipy.cluster.hierarchy import linkage 

import scipy.cluster.hierarchy as sch # for creating dendrogram 

type(df_norm) # in pandas but now

#p = np.array(df_norm) # converting into numpy array format 

z = linkage(df_norm, method="complete",metric="euclidean")

plt.figure(figsize=(15, 5));plt.title('Hierarchical Clustering Dendrogram');plt.xlabel('Index');plt.ylabel('Distance')
sch.dendrogram(
    z,
    leaf_rotation=0.,  # rotates the x axis labels
    leaf_font_size=8.,  # font size for the x axis labels
)
plt.show()

# 6 clusters are formed
help(linkage)

# Now applying AgglomerativeClustering choosing 5 as clusters from the dendrogram
from	sklearn.cluster	import	AgglomerativeClustering 
h_complete	=	AgglomerativeClustering(n_clusters=5,	linkage='complete',affinity = "euclidean").fit(df_norm) 


cluster_labels=pd.Series(h_complete.labels_)
airline['clust']=cluster_labels # creating a  new column and assigning it to new column 
airline = airline.iloc[:,[11,0,1,2,3,4,5,6,8,9,10]]
airline.head()

# getting aggregate mean of each cluster
airline.iloc[:,2:].groupby(airline.clust).mean()

# creating a csv file 
airline.to_csv("airline.csv",encoding="utf-8")

import os

os.getcwd()
os.chdir('')
